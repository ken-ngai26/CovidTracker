{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/helper.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nconst casesTypeColour = {\n  cases: {\n    fill: {\n      fillColor: 'blue',\n      color: 'blue'\n    },\n    multiplier: 300\n  },\n  recovered: {\n    fill: {\n      fillColor: 'green',\n      color: 'green'\n    },\n    multiplier: 300\n  },\n  deaths: {\n    fill: {\n      fillColor: 'red',\n      color: 'red'\n    },\n    multiplier: 300\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\nexport const printStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const showData = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.6,\n  pathOptions: casesTypeColour[casesType].fill,\n  radius: Math.sqrt(country[casesType]) * casesTypeColour[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-flag\",\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-name\",\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-cases\",\n        children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-recovered\",\n        children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-deaths\",\n        children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 5\n}, this));","map":{"version":3,"sources":["/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/helper.js"],"names":["React","numeral","Circle","Popup","casesTypeColour","cases","fill","fillColor","color","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","printStat","stat","format","showData","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColour = {\n    cases: {\n      fill : {fillColor: 'blue', color: 'blue'},\n      multiplier: 300,\n    },\n    recovered: {\n      fill : {fillColor: 'green', color: 'green'},\n      multiplier: 300,\n    },\n    deaths: {\n      fill : {fillColor: 'red', color: 'red'},\n      multiplier: 300,\n    },\n};\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n    sortedData.sort((a,b) => {\n      if (a.cases > b.cases) {\n        return -1;\n      }else{\n        return 1;\n      }\n    });\n    return sortedData;\n};\n\nexport const printStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showData = (data, casesType = \"cases\") =>\n  data.map((country) => (\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      fillOpacity={0.6}\n      pathOptions={\n        casesTypeColour[casesType].fill\n      }\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColour[casesType].multiplier\n      }>\n\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-cases\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n"]},"metadata":{},"sourceType":"module"}