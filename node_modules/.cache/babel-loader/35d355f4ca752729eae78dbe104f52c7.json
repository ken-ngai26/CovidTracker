{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfomationBox from './informationBox';\nimport Map from './map';\nimport Table from './Table';\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = React.useState([]);\n  const [country, setCountry] = React.useState(['WW']);\n  const [countryInfo, setCountryInfo] = React.useState({});\n  const [caseTable, setCaseTable] = React.useState([]);\n  const sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n  React.useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    //run once as componet loads and not again\n    // async -> send requent and wait for it then do something with it\n    const getData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        // it give back a big json\n        const countries = data.map(country => ({\n          // go through each country\n          name: country.country,\n          value: country.countryInfo.iso3\n        }));\n        setCaseTable(data);\n        setCountries(countries);\n      });\n    };\n\n    getData();\n  }, []);\n\n  const onDropChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode); // get info for ww\n    // get info for country\n\n    const url = countryCode === \"WW\" ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Live tracing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onDropChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"WW\",\n              children: \"WorldWide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stat\",\n        children: [/*#__PURE__*/_jsxDEV(InfomationBox, {\n          title: \"Covid-19 Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfomationBox, {\n          title: \"Recovered Cases\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfomationBox, {\n          title: \"Death Cases\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: caseTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BlITjQuQV5dmAmM3PFGNwaLHVUE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/App.js"],"names":["React","MenuItem","FormControl","Select","Card","CardContent","InfomationBox","Map","Table","App","countries","setCountries","useState","country","setCountry","countryInfo","setCountryInfo","caseTable","setCaseTable","sortedData","data","sort","a","b","cases","useEffect","fetch","then","response","json","getData","map","name","value","iso3","onDropChange","event","countryCode","target","url","todayCases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,WALF,QAMO,mBANP;AAOA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACY,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACY,QAAN,CAAe,CAAC,IAAD,CAAf,CAA9B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgChB,KAAK,CAACY,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BlB,KAAK,CAACY,QAAN,CAAe,EAAf,CAAlC;AAEA,QAAMO,UAAU,GAAG,CAAC,GAAGC,IAAJ,CAAnB;AACAD,EAAAA,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAAS;AACvB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB;AACrB,aAAO,CAAC,CAAR;AACD,KAFD,MAEK;AACH,aAAO,CAAP;AACD;AACF,GAND;AAOA,SAAOL,UAAP;AAEAnB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOP,IAAD,IAAU;AACdJ,MAAAA,cAAc,CAACI,IAAD,CAAd;AACD,KAJD;AAKD,GAND,EAMG,EANH;AAQApB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpB;AACA;AACA,UAAMK,OAAO,GAAG,YAAY;AAC1B,YAAMJ,KAAK,CAAC,0CAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECP,IAAD,IAAU;AACd;AACA,cAAMV,SAAS,GAAGU,IAAI,CAACW,GAAL,CAAUlB,OAAD,KACzB;AACE;AACAmB,UAAAA,IAAI,EAAGnB,OAAO,CAACA,OAFjB;AAGEoB,UAAAA,KAAK,EAAEpB,OAAO,CAACE,WAAR,CAAoBmB;AAH7B,SADyB,CAAT,CAAlB;AAQAhB,QAAAA,YAAY,CAACE,IAAD,CAAZ;AACAT,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,OAdK,CAAN;AAeD,KAhBD;;AAiBAoB,IAAAA,OAAO;AACR,GArBD,EAqBG,EArBH;;AAuBA,QAAMK,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaL,KAAjC;AACAnB,IAAAA,UAAU,CAACuB,WAAD,CAAV,CAFoC,CAGpC;AACA;;AAEA,UAAME,GAAG,GAAIF,WAAW,KAAK,IAAhB,GAAuB,oCAAvB,GACZ,4CAA2CA,WAAY,EADxD;AAGA,UAAMX,KAAK,CAACa,GAAD,CAAL,CACLZ,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECP,IAAD,IAAU;AACdN,MAAAA,UAAU,CAACuB,WAAD,CAAV;AACArB,MAAAA,cAAc,CAACI,IAAD,CAAd;AAED,KANK,CAAN;AAOD,GAhBD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAG,cAAzB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAG,UAAlB;AAA6B,YAAA,QAAQ,EAAEe,YAAvC;AAAqD,YAAA,KAAK,EAAEtB,OAA5D;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAG,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGGH,SAAS,CAACqB,GAAV,CAAelB,OAAD,iBACb,QAAC,QAAD;AAAU,cAAA,KAAK,EAAIA,OAAO,CAACoB,KAA3B;AAAA,wBAAmCpB,OAAO,CAACmB;AAA3C;AAAA;AAAA;AAAA;AAAA,oBADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAG,gBAAvB;AAAwC,UAAA,KAAK,EAAIjB,WAAW,CAACyB,UAA7D;AAAyE,UAAA,KAAK,EAAIzB,WAAW,CAACS;AAA9F;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAG,iBAAvB;AAAyC,UAAA,KAAK,EAAIT,WAAW,CAAC0B,cAA9D;AAA8E,UAAA,KAAK,EAAI1B,WAAW,CAAC2B;AAAnG;AAAA;AAAA;AAAA;AAAA,gBAHF,eAKE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAG,aAAvB;AAAqC,UAAA,KAAK,EAAI3B,WAAW,CAAC4B,WAA1D;AAAuE,UAAA,KAAK,EAAI5B,WAAW,CAAC6B;AAA5F;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAwBE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eA4BC,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAI3B;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GA5GQR,G;;KAAAA,G;AA6GT,eAAeA,GAAf","sourcesContent":["import * as React from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport InfomationBox from './informationBox';\nimport Map from './map';\nimport Table from './Table';\nimport './App.css';\n\nfunction App() {\n  const [countries, setCountries] = React.useState([]);\n  const [country, setCountry] = React.useState(['WW']);\n  const [countryInfo, setCountryInfo] = React.useState({});\n  const [caseTable, setCaseTable] = React.useState([]);\n\n  const sortedData = [...data];\n  sortedData.sort((a,b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    }else{\n      return 1;\n    }\n  }) \n  return sortedData\n\n  React.useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((response) => response.json())\n    .then((data) => {\n      setCountryInfo(data);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    //run once as componet loads and not again\n    // async -> send requent and wait for it then do something with it\n    const getData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        // it give back a big json\n        const countries = data.map((country) => (\n          { \n            // go through each country\n            name : country.country, \n            value: country.countryInfo.iso3\n          }\n        ));\n\n        setCaseTable(data);\n        setCountries(countries);\n      });\n    };\n    getData();\n  }, []);\n\n  const onDropChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    // get info for ww\n    // get info for country\n\n    const url = (countryCode === \"WW\" ? 'https://disease.sh/v3/covid-19/all' :\n    `https://disease.sh/v3/covid-19/countries/${countryCode}`\n    )\n    await fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n    })\n  };\n  return (\n    <div className=\"app\"> \n    <div className=\"app_left\">\n      <div className=\"app_header\">\n        <h1>Covid-19 Live tracing</h1>\n        \n        <FormControl className = \"app_dropdown\">\n          <Select variant = \"outlined\" onChange={onDropChange} value={country}>\n            <MenuItem value = \"WW\">WorldWide</MenuItem>\n            {/* loop through all country and show drop down*/}\n            {countries.map((country) => (\n              <MenuItem value = {country.value}>{country.name}</MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n      \n      <div className=\"app_stat\">\n        <InfomationBox title = \"Covid-19 Cases\" cases = {countryInfo.todayCases} total = {countryInfo.cases}>\n        </InfomationBox>\n        <InfomationBox title = \"Recovered Cases\" cases = {countryInfo.todayRecovered} total = {countryInfo.recovered}>\n        </InfomationBox>\n        <InfomationBox title = \"Death Cases\" cases = {countryInfo.todayDeaths} total = {countryInfo.deaths}>\n        </InfomationBox>\n      </div>       \n      {/*map*/}\n      <Map></Map>\n    </div>\n\n     <Card className=\"app_right\">\n       <CardContent>\n         <h3>Live Cases by Country</h3>\n         <Table countries = {caseTable}></Table>\n          {/*table*/}\n        <h3>Worldwide new cases</h3>\n          {/*graph*/}\n       </CardContent>\n     </Card>\n\n    \n    \n    \n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}