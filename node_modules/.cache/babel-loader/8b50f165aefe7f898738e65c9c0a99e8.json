{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfomationBox from './InformationBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData, printStat } from \"./helper\";\nimport LineGraph from \"./LineGraph\";\nimport numeral from \"numeral\";\nimport './App.css';\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = React.useState([]);\n  const [country, setCountry] = React.useState(['WW']);\n  const [countryInfo, setCountryInfo] = React.useState({});\n  const [caseTable, setCaseTable] = React.useState([]);\n  const [casesType, setCasesType] = React.useState(\"cases\");\n  const [mapCenter, setMapCenter] = React.useState({\n    lat: 34.807,\n    lng: -40.479\n  });\n  const [mapZoom, setMapZoom] = React.useState(3);\n  const [mapCountries, setMapCountries] = React.useState([]); // React.useEffect(() => {\n  //   fetch(\"https://disease.sh/v3/covid-19/all\")\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //     setCountryInfo(data);\n  //   });\n  // }, []);\n\n  React.useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []); // React.useEffect(() => {\n  //   //run once as componet loads and not again\n  //   // async -> send requent and wait for it then do something with it\n  //   const getData = async () => {\n  //     fetch(\"https://disease.sh/v3/covid-19/countries\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       // it give back a big json\n  //       const countries = data.map((country) => (\n  //         { \n  //           // go through each country\n  //           name : country.country, \n  //           value: country.countryInfo.iso3,\n  //         }\n  //       ));\n  //       let sorted = sortData(data);\n  //       setCountries(countries);\n  //       setMapCountries(data);\n  //       setCaseTable(sorted);\n  //     });\n  //   };\n  //   getData();\n  // }, []);\n\n  React.useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        let sortedData = sortData(data);\n        setCountries(countries);\n        setMapCountries(data);\n        setCaseTable(sortedData);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onDropChange = async e => {\n    const countryCode = e.target.value; // setCountry(countryCode);\n    // get info for ww\n    // get info for country\n\n    const url = countryCode === \"WW\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Live tracing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onDropChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"WW\",\n              children: \"WorldWide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stat\",\n        children: [/*#__PURE__*/_jsxDEV(InfomationBox, {\n          onClick: e => setCasesType(\"cases\"),\n          title: \"Covid 19 Cases\" // isRed\n          // active={casesType === \"cases\"}\n          ,\n          cases: printStat(countryInfo.todayCases),\n          total: numeral(countryInfo.cases).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfomationBox, {\n          onClick: e => setCasesType(\"recovered\"),\n          title: \"Recovered\" // active={casesType === \"recovered\"}\n          ,\n          cases: printStat(countryInfo.todayRecovered),\n          total: numeral(countryInfo.recovered).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfomationBox, {\n          onClick: e => setCasesType(\"deaths\"),\n          title: \"Deaths\" // isRed\n          // active={casesType === \"deaths\"}\n          ,\n          cases: printStat(countryInfo.todayDeaths),\n          total: numeral(countryInfo.deaths).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: mapCountries,\n        casesType: casesType,\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app_tableAndChart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Cases by Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            countries: caseTable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Worldwide Graph by \", casesType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            casesType: casesType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3QG0/X2uFcsK8NpEWOxzug3sPu8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/App.js"],"names":["React","MenuItem","FormControl","Select","Card","CardContent","InfomationBox","Map","Table","sortData","printStat","LineGraph","numeral","App","countries","setCountries","useState","country","setCountry","countryInfo","setCountryInfo","caseTable","setCaseTable","casesType","setCasesType","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountries","setMapCountries","useEffect","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onDropChange","e","countryCode","target","url","long","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport InfomationBox from './InformationBox';\nimport Map from './Map';\nimport Table from './Table';\nimport {sortData, printStat} from \"./helper\";\nimport LineGraph from \"./LineGraph\"\nimport numeral from \"numeral\"\nimport './App.css';\nimport \"leaflet/dist/leaflet.css\";\n\n\nconst App = () => {\n  const [countries, setCountries] = React.useState([]);\n  const [country, setCountry] = React.useState(['WW']);\n  const [countryInfo, setCountryInfo] = React.useState({});\n  const [caseTable, setCaseTable] = React.useState([]);\n  const [casesType, setCasesType] = React.useState(\"cases\");\n  const [mapCenter, setMapCenter] = React.useState({lat: 34.807, lng: -40.479})\n  const [mapZoom, setMapZoom] = React.useState(3);\n  const [mapCountries, setMapCountries] = React.useState([]);\n\n\n  // React.useEffect(() => {\n  //   fetch(\"https://disease.sh/v3/covid-19/all\")\n  //   .then((response) => response.json())\n  //   .then((data) => {\n  //     setCountryInfo(data);\n  //   });\n  // }, []);\n  React.useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  // React.useEffect(() => {\n  //   //run once as componet loads and not again\n  //   // async -> send requent and wait for it then do something with it\n  //   const getData = async () => {\n  //     fetch(\"https://disease.sh/v3/covid-19/countries\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       // it give back a big json\n  //       const countries = data.map((country) => (\n  //         { \n  //           // go through each country\n  //           name : country.country, \n  //           value: country.countryInfo.iso3,\n  //         }\n  //       ));\n  //       let sorted = sortData(data);\n  //       setCountries(countries);\n  //       setMapCountries(data);\n  //       setCaseTable(sorted);\n        \n  //     });\n  //   };\n  //   getData();\n  // }, []);\n\n  React.useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setCaseTable(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onDropChange = async (e) => {\n    const countryCode = e.target.value;\n    // setCountry(countryCode);\n    // get info for ww\n    // get info for country\n\n    const url =\n      countryCode === \"WW\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n    });\n  };\n  return (\n    <div className=\"app\"> \n    <div className=\"app_left\">\n      <div className=\"app_header\">\n        <h1>Covid-19 Live tracing</h1>\n        \n        <FormControl className = \"app_dropdown\">\n          <Select variant = \"outlined\" onChange={onDropChange} value={country}>\n            <MenuItem value = \"WW\">WorldWide</MenuItem>\n            {/* loop through all country and show drop down*/}\n            {countries.map((country) => (\n              <MenuItem value = {country.value}>{country.name}</MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n      \n      <div className=\"app_stat\">\n        <InfomationBox \n          onClick={(e) => setCasesType(\"cases\")}\n          title=\"Covid 19 Cases\"\n          // isRed\n          // active={casesType === \"cases\"}\n          cases={printStat(countryInfo.todayCases)}\n          total={numeral(countryInfo.cases).format(\"0.0a\")}>\n        </InfomationBox>\n        <InfomationBox \n          onClick={(e) => setCasesType(\"recovered\")}\n          title=\"Recovered\"\n          // active={casesType === \"recovered\"}\n          cases={printStat(countryInfo.todayRecovered)}\n          total={numeral(countryInfo.recovered).format(\"0.0a\")}>\n        </InfomationBox>\n        <InfomationBox\n          onClick={(e) => setCasesType(\"deaths\")}\n          title=\"Deaths\"\n          // isRed\n          // active={casesType === \"deaths\"}\n          cases={printStat(countryInfo.todayDeaths)}\n          total={numeral(countryInfo.deaths).format(\"0.0a\")}>\n        </InfomationBox>\n      </div>       \n      <Map countries = {mapCountries} casesType={casesType} center={mapCenter} zoom ={mapZoom}></Map>\n    </div>\n\n     <Card className=\"app_right\">\n       <CardContent>\n         <div className = \"app_tableAndChart\">\n          <h3><strong>Total Cases by Country</strong></h3>\n          <Table countries = {caseTable}></Table>\n          <h3>Worldwide Graph by {casesType}</h3>\n            <LineGraph casesType={casesType} />\n         </div>\n         \n       </CardContent>\n     </Card>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}