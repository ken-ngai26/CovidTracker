{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfomationBox from './informationBox';\nimport Map from './map';\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = React.useState([]);\n  const [country, setCountry] = React.useState(['WW']);\n  React.useEffect(() => {\n    //run once as componet loads and not again\n    // async -> send requent and wait for it then do something with it\n    const getData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        // it give back a big json\n        const countries = data.map(country => ({\n          // go through each country\n          name: country.country,\n          value: country.countryInfo.iso3\n        }));\n        setCountries(countries);\n      });\n    };\n\n    getData();\n  }, [countries]);\n\n  const onDropChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Live tracing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onDropChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"WW\",\n              children: \"WorldWide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stat\",\n        children: [/*#__PURE__*/_jsxDEV(InfomationBox, {\n          title: \"Covid-19 Cases\",\n          cases: 300,\n          total: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfomationBox, {\n          title: \"Recovered Cases\",\n          cases: 300,\n          total: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfomationBox, {\n          title: \"Death Cases\",\n          cases: 300,\n          total: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7pe+pzSjapPnsPBGOFAls3TN7Mg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/App.js"],"names":["React","MenuItem","FormControl","Select","Card","CardContent","InfomationBox","Map","App","countries","setCountries","useState","country","setCountry","useEffect","getData","fetch","then","response","json","data","map","name","value","countryInfo","iso3","onDropChange","event","countryCode","target"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport InfomationBox from './informationBox';\nimport Map from './map'\nimport './App.css';\n\nfunction App() {\n  const [countries, setCountries] = React.useState([]);\n  const [country, setCountry] = React.useState(['WW']);\n\n  React.useEffect(() => {\n    //run once as componet loads and not again\n    // async -> send requent and wait for it then do something with it\n    const getData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        // it give back a big json\n        const countries = data.map((country) => (\n          { \n            // go through each country\n            name : country.country, \n            value: country.countryInfo.iso3\n          }\n        ));\n        setCountries(countries);\n      });\n    };\n    getData();\n  }, [countries]);\n\n  const onDropChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n  }\n  return (\n    <div className=\"app\"> \n    <div className=\"app_left\">\n      <div className=\"app_header\">\n        <h1>Covid-19 Live tracing</h1>\n        \n        <FormControl className = \"app_dropdown\">\n          <Select variant = \"outlined\" onChange={onDropChange} value={country}>\n            <MenuItem value = \"WW\">WorldWide</MenuItem>\n            {/* loop through all country and show drop down*/}\n            {countries.map((country) => (\n              <MenuItem value = {country.value}>{country.name}</MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n      \n      <div className=\"app_stat\">\n        <InfomationBox title = \"Covid-19 Cases\" cases = {300} total = {300}>\n        </InfomationBox>\n        <InfomationBox title = \"Recovered Cases\" cases = {300} total = {300}>\n        </InfomationBox>\n        <InfomationBox title = \"Death Cases\" cases = {300} total = {300}>\n        </InfomationBox>\n      </div>       \n      {/*map*/}\n      <Map></Map>\n    </div>\n\n     <Card className=\"app_right\">\n       <CardContent>\n        {/*table*/}\n        {/*graph*/}\n       </CardContent>\n     </Card>\n\n    \n    \n    \n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}