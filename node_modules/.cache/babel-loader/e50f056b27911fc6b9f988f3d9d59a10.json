{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfomationBox from './informationBox';\nimport Map from './map';\nimport Table from './Table';\nimport { sortData } from \"./helper\";\nimport LineGraph from \"./LineGraph\"; // import numeral from \"numeral\"\n\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = React.useState([]);\n  const [country, setCountry] = React.useState(['WW']);\n  const [countryInfo, setCountryInfo] = React.useState({});\n  const [caseTable, setCaseTable] = React.useState([]);\n  const [casesType, setCasesType] = React.useState(\"cases\");\n  React.useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  React.useEffect(() => {\n    //run once as componet loads and not again\n    // async -> send requent and wait for it then do something with it\n    const getData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        // it give back a big json\n        const countries = data.map(country => ({\n          // go through each country\n          name: country.country,\n          value: country.countryInfo.iso3\n        }));\n        const sorted = sortData(data);\n        setCaseTable(sorted);\n        setCountries(countries);\n      });\n    };\n\n    getData();\n  }, []);\n\n  const onDropChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode); // get info for ww\n    // get info for country\n\n    const url = countryCode === \"WW\" ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Live tracing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onDropChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"WW\",\n              children: \"WorldWide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stat\",\n        children: [/*#__PURE__*/_jsxDEV(InfomationBox, {\n          onClick: e => setCasesType(\"cases\"),\n          title: \"Covid-19 Cases\",\n          isRed: true,\n          active: casesType === \"cases\",\n          cases: prettyPrintStat(countryInfo.todayCases),\n          total: numeral(countryInfo.cases).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfomationBox, {\n          onClick: e => setCasesType(\"recovered\"),\n          title: \"Recovered Cases\",\n          active: casesType === \"recovered\",\n          cases: prettyPrintStat(countryInfo.todayRecovered),\n          total: numeral(countryInfo.recovered).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfomationBox, {\n          onClick: e => setCasesType(\"deaths\"),\n          title: \"Death Cases\",\n          isRed: true,\n          active: casesType === \"deaths\",\n          cases: prettyPrintStat(countryInfo.todayDeaths),\n          total: numeral(countryInfo.deaths).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app_tableAndChart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Cases by Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            countries: caseTable\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Worldwide new cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            castesType: casesType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QdGGrLQUDdgK1QKG0JyEYlsZP4E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/App.js"],"names":["React","MenuItem","FormControl","Select","Card","CardContent","InfomationBox","Map","Table","sortData","LineGraph","App","countries","setCountries","useState","country","setCountry","countryInfo","setCountryInfo","caseTable","setCaseTable","casesType","setCasesType","useEffect","fetch","then","response","json","data","getData","map","name","value","iso3","sorted","onDropChange","event","countryCode","target","url","e","prettyPrintStat","todayCases","numeral","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,WALF,QAMO,mBANP;AAOA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,QAAR,QAAuB,UAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,KAAK,CAACc,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,KAAK,CAACc,QAAN,CAAe,CAAC,IAAD,CAAf,CAA9B;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgClB,KAAK,CAACc,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BpB,KAAK,CAACc,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BtB,KAAK,CAACc,QAAN,CAAe,OAAf,CAAlC;AAKAd,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdV,MAAAA,cAAc,CAACU,IAAD,CAAd;AACD,KAJD;AAKD,GAND,EAMG,EANH;AAQA5B,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpB;AACA;AACA,UAAMM,OAAO,GAAG,YAAY;AAC1B,YAAML,KAAK,CAAC,0CAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECG,IAAD,IAAU;AACd;AACA,cAAMhB,SAAS,GAAGgB,IAAI,CAACE,GAAL,CAAUf,OAAD,KACzB;AACE;AACAgB,UAAAA,IAAI,EAAGhB,OAAO,CAACA,OAFjB;AAGEiB,UAAAA,KAAK,EAAEjB,OAAO,CAACE,WAAR,CAAoBgB;AAH7B,SADyB,CAAT,CAAlB;AAOA,cAAMC,MAAM,GAAGzB,QAAQ,CAACmB,IAAD,CAAvB;AACAR,QAAAA,YAAY,CAACc,MAAD,CAAZ;AACArB,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,OAdK,CAAN;AAeD,KAhBD;;AAiBAiB,IAAAA,OAAO;AACR,GArBD,EAqBG,EArBH;;AAuBA,QAAMM,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaN,KAAjC;AACAhB,IAAAA,UAAU,CAACqB,WAAD,CAAV,CAFoC,CAGpC;AACA;;AAEA,UAAME,GAAG,GAAIF,WAAW,KAAK,IAAhB,GAAuB,oCAAvB,GACZ,4CAA2CA,WAAY,EADxD;AAGA,UAAMb,KAAK,CAACe,GAAD,CAAL,CACLd,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECG,IAAD,IAAU;AACdZ,MAAAA,UAAU,CAACqB,WAAD,CAAV;AACAnB,MAAAA,cAAc,CAACU,IAAD,CAAd;AAED,KANK,CAAN;AAOD,GAhBD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAG,cAAzB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAG,UAAlB;AAA6B,YAAA,QAAQ,EAAEO,YAAvC;AAAqD,YAAA,KAAK,EAAEpB,OAA5D;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAG,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGGH,SAAS,CAACkB,GAAV,CAAef,OAAD,iBACb,QAAC,QAAD;AAAU,cAAA,KAAK,EAAIA,OAAO,CAACiB,KAA3B;AAAA,wBAAmCjB,OAAO,CAACgB;AAA3C;AAAA;AAAA;AAAA;AAAA,oBADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAGS,CAAD,IAAOlB,YAAY,CAAC,OAAD,CAA3C;AAAsD,UAAA,KAAK,EAAG,gBAA9D;AAA+E,UAAA,KAAK,MAApF;AAAqF,UAAA,MAAM,EAAID,SAAS,KAAK,OAA7G;AAAsH,UAAA,KAAK,EAAIoB,eAAe,CAACxB,WAAW,CAACyB,UAAb,CAA9I;AAAwK,UAAA,KAAK,EAAIC,OAAO,CAAC1B,WAAW,CAAC2B,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC;AAAjL;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAGL,CAAD,IAAOlB,YAAY,CAAC,WAAD,CAA3C;AAA0D,UAAA,KAAK,EAAG,iBAAlE;AAAoF,UAAA,MAAM,EAAID,SAAS,KAAK,WAA5G;AAA0H,UAAA,KAAK,EAAIoB,eAAe,CAACxB,WAAW,CAAC6B,cAAb,CAAlJ;AAAgL,UAAA,KAAK,EAAIH,OAAO,CAAC1B,WAAW,CAAC8B,SAAb,CAAP,CAA+BF,MAA/B,CAAsC,MAAtC;AAAzL;AAAA;AAAA;AAAA;AAAA,gBAHF,eAKE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAGL,CAAD,IAAOlB,YAAY,CAAC,QAAD,CAA3C;AAAuD,UAAA,KAAK,EAAG,aAA/D;AAA6E,UAAA,KAAK,MAAlF;AAAmF,UAAA,MAAM,EAAID,SAAS,KAAK,QAA3G;AAAqH,UAAA,KAAK,EAAIoB,eAAe,CAACxB,WAAW,CAAC+B,WAAb,CAA7I;AAAwK,UAAA,KAAK,EAAIL,OAAO,CAAC1B,WAAW,CAACgC,MAAb,CAAP,CAA4BJ,MAA5B,CAAmC,MAAnC;AAAjL;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAwBE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eA4BC,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAG,mBAAjB;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,KAAD;AAAO,YAAA,SAAS,EAAI1B;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,eAMG,QAAC,SAAD;AAAW,YAAA,UAAU,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,kBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GA1GQV,G;;KAAAA,G;AA2GT,eAAeA,GAAf","sourcesContent":["import * as React from 'react';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport InfomationBox from './informationBox';\nimport Map from './map';\nimport Table from './Table';\nimport {sortData} from \"./helper\";\nimport LineGraph from \"./LineGraph\"\n// import numeral from \"numeral\"\nimport './App.css';\n\nfunction App() {\n  const [countries, setCountries] = React.useState([]);\n  const [country, setCountry] = React.useState(['WW']);\n  const [countryInfo, setCountryInfo] = React.useState({});\n  const [caseTable, setCaseTable] = React.useState([]);\n  const [casesType, setCasesType] = React.useState(\"cases\");\n\n\n \n\n  React.useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((response) => response.json())\n    .then((data) => {\n      setCountryInfo(data);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    //run once as componet loads and not again\n    // async -> send requent and wait for it then do something with it\n    const getData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data) => {\n        // it give back a big json\n        const countries = data.map((country) => (\n          { \n            // go through each country\n            name : country.country, \n            value: country.countryInfo.iso3\n          }\n        ));\n        const sorted = sortData(data);\n        setCaseTable(sorted);\n        setCountries(countries);\n      });\n    };\n    getData();\n  }, []);\n\n  const onDropChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    // get info for ww\n    // get info for country\n\n    const url = (countryCode === \"WW\" ? 'https://disease.sh/v3/covid-19/all' :\n    `https://disease.sh/v3/covid-19/countries/${countryCode}`\n    )\n    await fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n    })\n  };\n  return (\n    <div className=\"app\"> \n    <div className=\"app_left\">\n      <div className=\"app_header\">\n        <h1>Covid-19 Live tracing</h1>\n        \n        <FormControl className = \"app_dropdown\">\n          <Select variant = \"outlined\" onChange={onDropChange} value={country}>\n            <MenuItem value = \"WW\">WorldWide</MenuItem>\n            {/* loop through all country and show drop down*/}\n            {countries.map((country) => (\n              <MenuItem value = {country.value}>{country.name}</MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n      \n      <div className=\"app_stat\">\n        <InfomationBox onClick={(e) => setCasesType(\"cases\")} title = \"Covid-19 Cases\" isRed active = {casesType === \"cases\"} cases = {prettyPrintStat(countryInfo.todayCases)} total = {numeral(countryInfo.cases).format(\"0.0a\")}>\n        </InfomationBox>\n        <InfomationBox onClick={(e) => setCasesType(\"recovered\")} title = \"Recovered Cases\" active = {casesType === \"recovered\"}  cases = {prettyPrintStat(countryInfo.todayRecovered)} total = {numeral(countryInfo.recovered).format(\"0.0a\")}>\n        </InfomationBox>\n        <InfomationBox onClick={(e) => setCasesType(\"deaths\")} title = \"Death Cases\" isRed active = {casesType === \"deaths\"} cases = {prettyPrintStat(countryInfo.todayDeaths)} total = {numeral(countryInfo.deaths).format(\"0.0a\")}>\n        </InfomationBox>\n      </div>       \n      {/*map*/}\n      <Map></Map>\n    </div>\n\n     <Card className=\"app_right\">\n       <CardContent>\n         <div className = \"app_tableAndChart\">\n          <h3>Total Cases by Country</h3>\n          <Table countries = {caseTable}></Table>\n            {/*table*/}\n          <h3>Worldwide new cases</h3>\n            {/*graph*/}\n            <LineGraph castesType={casesType} />\n         </div>\n         \n       </CardContent>\n     </Card>\n\n    \n    \n    \n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}