{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nconst buildChart = (data, casesType) => {\n  const chartData = []; //find the new cases by substracting the difference\n\n  let lastData;\n\n  for (let date in data.cases) {\n    if (lastData) {\n      let newData = {\n        x: date,\n        y: data[casesType][date] - lastData\n      };\n      chartData.push(newData);\n    }\n\n    lastData = data[casesType][date];\n  }\n\n  return chartData;\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = React.useState({});\n  React.useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      // get data for plotting line graph\n      const chartData = buildChart(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          blackgroundColor: 'black',\n          borderColor: 'black',\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/kenngai/Desktop/cmpt383/CMPT383-project/cmpt-383-project/frontend/src/LineGraph.js"],"names":["React","Line","buildChart","data","casesType","chartData","lastData","date","cases","newData","x","y","push","LineGraph","setData","useState","useEffect","fetch","then","response","json","datasets","blackgroundColor","borderColor"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AACtC,QAAMC,SAAS,GAAG,EAAlB,CADsC,CAEtC;;AACA,MAAIC,QAAJ;;AACA,OAAI,IAAIC,IAAR,IAAgBJ,IAAI,CAACK,KAArB,EAA2B;AACzB,QAAGF,QAAH,EAAa;AACX,UAAIG,OAAO,GAAG;AACZC,QAAAA,CAAC,EAAEH,IADS;AAEZI,QAAAA,CAAC,EAAER,IAAI,CAACC,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFf,OAAd;AAIAD,MAAAA,SAAS,CAACO,IAAV,CAAeH,OAAf;AACD;;AACDH,IAAAA,QAAQ,GAAGH,IAAI,CAACC,SAAD,CAAJ,CAAgBG,IAAhB,CAAX;AACD;;AACD,SAAOF,SAAP;AACD,CAfD;;AAkBA,SAASQ,SAAT,GAAqB;AAAA;;AACjB,QAAK,CAACV,IAAD,EAAOW,OAAP,IAAkBd,KAAK,CAACe,QAAN,CAAe,EAAf,CAAvB;AAGAf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOf,IAAD,IAAU;AACd;AACA,YAAME,SAAS,GAAGH,UAAU,CAACC,IAAD,CAA5B;AACAW,MAAAA,OAAO,CAACT,SAAD,CAAP;AACD,KAND;AAOD,GARD,EAQG,EARH;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAI;AACZgB,QAAAA,QAAQ,EAAE,CAAC;AACTC,UAAAA,gBAAgB,EAAE,OADT;AAETC,UAAAA,WAAW,EAAE,OAFJ;AAGTpB,UAAAA,IAAI,EAAEA;AAHG,SAAD;AADE;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA3BQU,S;;KAAAA,S;AA6BT,eAAeA,SAAf","sourcesContent":["import * as React from 'react';\nimport { Line } from \"react-chartjs-2\"\n\nconst buildChart = (data, casesType) => {\n  const chartData = [];\n  //find the new cases by substracting the difference\n  let lastData;\n  for(let date in data.cases){\n    if(lastData) {\n      let newData = {\n        x: date,\n        y: data[casesType][date] - lastData,\n      };\n      chartData.push(newData);\n    }\n    lastData = data[casesType][date];\n  }\n  return chartData;\n};\n\n\nfunction LineGraph() {\n    const[data, setData] = React.useState({});\n    \n\n    React.useEffect(() => {\n      fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n      .then((response) => response.json())\n      .then((data) => {\n        // get data for plotting line graph\n        const chartData = buildChart(data);\n        setData(chartData);\n      });\n    }, []);\n\n    return (\n        <div>\n            <h1>This is graph</h1>\n            <Line data = {{\n              datasets: [{\n                blackgroundColor: 'black',\n                borderColor: 'black',\n                data: data,\n              },\n              ]\n            }}/>            \n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}